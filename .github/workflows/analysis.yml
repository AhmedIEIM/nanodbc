---
name: "Analysis"

on:
  push:
    branches: [ main ]
    paths:
      - '**.cpp'
      - '**.h'
      - '.github/workflows/analysis.yml'
  pull_request:
    paths:
      - '**.cpp'
      - '**.h'
      - '.github/workflows/analysis.yml'

env:
  build: '${{ github.workspace }}/build'
  config: 'Debug'

jobs:
  core:
    name: CppCoreCheckRules
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{ env.build }} -DCMAKE_BUILD_TYPE=${{ env.config }}

      - name: Run MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@v0.1.1
        id: run-core-analysis
        with:
          cmakeBuildDirectory: ${{ env.build }}
          buildConfiguration: ${{ env.config }}
          ruleset: CppCoreCheckRules.ruleset
          ignoredPaths: ${{ github.workspace }}/test/catch

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.run-core-analysis.outputs.sarif }}

      - name: Upload SARIF as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sarif-core
          path: ${{ steps.run-core-analysis.outputs.sarif }}
          overwrite: true

      - name: Upload MSVC build outputs (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: analysis-core-build-windows
          path: |
            ${{ env.build }}/**/*.lib
            ${{ env.build }}/**/*.dll
            ${{ env.build }}/**/*.pdb
            ${{ env.build }}/**/*.exe
          if-no-files-found: warn
          retention-days: 14

  native:
    name: NativeRecommendedRules
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{ env.build }} -DCMAKE_BUILD_TYPE=${{ env.config }}

      - name: Run MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@v0.1.1
        id: run-native-analysis
        with:
          cmakeBuildDirectory: ${{ env.build }}
          buildConfiguration: ${{ env.config }}
          ruleset: NativeRecommendedRules.ruleset
          ignoredPaths: ${{ github.workspace }}/test/catch

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.run-native-analysis.outputs.sarif }}

      - name: Upload SARIF as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sarif-native
          path: ${{ steps.run-native-analysis.outputs.sarif }}
          overwrite: true

      - name: Upload MSVC build outputs (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: analysis-native-build-windows
          path: |
            ${{ env.build }}/**/*.lib
            ${{ env.build }}/**/*.dll
            ${{ env.build }}/**/*.pdb
            ${{ env.build }}/**/*.exe
          if-no-files-found: warn
          retention-days: 14

  flawfinder:
    name: Flawfinder
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: flawfinder_scan
        uses: david-a-wheeler/flawfinder@8e4a779ad59dbfaee5da586aa9210853b701959c
        with:
          arguments: '--sarif ./'
          output: 'flawfinder_results.sarif'

      - name: Upload analysis results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{github.workspace}}/flawfinder_results.sarif
